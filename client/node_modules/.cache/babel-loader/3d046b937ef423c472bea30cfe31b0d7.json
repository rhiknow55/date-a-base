{"ast":null,"code":"var _jsxFileName = \"/Users/Rhino/date-a-base/client/src/App.js\";\n// import React, { Component } from 'react';\nimport React, { Component, Fragment } from \"react\";\nimport User from './User.js';\nimport Login from './Login.js'; // import Home from './containers/Home.js'\n\nimport Routes from './HomeRoute.js'; // import Routes from \"../routes/\";\n\nimport './App.css';\nimport './Color.css';\nimport Chat from './Chat.js';\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.userHasAuthenticated = (authenticated, userId, username, isAdmin, jwt) => {\n      console.log(userId);\n      console.log(username);\n      console.log(\"----------\");\n      this.setState({\n        isAuthenticated: authenticated,\n        userId: userId,\n        username: username,\n        isAdmin: isAdmin,\n        jwt: jwt\n      });\n      console.log(this.state);\n      console.log(\"---end of state---\");\n    };\n\n    this.logout = () => {\n      this.setState({\n        isAuthenticated: false,\n        userId: -1,\n        username: '',\n        isAdmin: false,\n        jwt: null\n      });\n    };\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.handleLogout = event => {\n      this.logout();\n      this.props.history.push(\"/login\");\n    };\n\n    this.state = {\n      isAuthenticated: false,\n      isAdmin: false,\n      userId: -1,\n      username: '',\n      jwt: null\n    };\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  // render() {\n  //     const childProps = {\n  //       isAuthenticated: this.state.isAuthenticated,\n  //       userHasAuthenticated: this.userHasAuthenticated\n  //     };\n  //     return (\n  //         <div className=\"App\">\n  //             <header className=\"App-header\">\n  //                 <h1 className=\"App-title\">Date-a-base</h1>\n  //             </header>\n  //\n  //             <p className=\"App-intro\">{this.state.data}</p>\n  //             <Login />\n  //             <User myUserId={1}/>\n  //         </div>\n  //     );\n  // }\n  render() {\n    const childProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      userHasAuthenticated: this.userHasAuthenticated,\n      myUserId: this.state.userId,\n      username: this.state.username,\n      isAdmin: this.state.isAdmin,\n      jwt: this.state.jwt\n    };\n    return React.createElement(\"div\", {\n      className: \"App container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      fluid: true,\n      collapseOnSelect: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Navbar.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      userId: this.state.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Date-a-base\")), React.createElement(Navbar.Toggle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(Navbar.Collapse, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Navbar.Collapse, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      pullRight: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.isAuthenticated ? React.createElement(NavItem, {\n      onClick: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Logout\") : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(LinkContainer, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Register\")), React.createElement(LinkContainer, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Login\"))))))), React.createElement(Routes, {\n      childProps: childProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }));\n  }\n\n} // export default App;\n\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/Rhino/date-a-base/client/src/App.js"],"names":["React","Component","Fragment","User","Login","Routes","Chat","Link","withRouter","Nav","Navbar","NavItem","LinkContainer","App","constructor","props","userHasAuthenticated","authenticated","userId","username","isAdmin","jwt","console","log","setState","isAuthenticated","state","logout","callBackendAPI","response","fetch","body","json","status","Error","message","handleLogout","event","history","push","componentDidMount","then","res","data","express","catch","err","render","childProps","myUserId"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react';\nimport React, { Component, Fragment } from \"react\";\nimport User from './User.js';\nimport Login from './Login.js';\n// import Home from './containers/Home.js'\nimport Routes from './HomeRoute.js';\n\n// import Routes from \"../routes/\";\nimport './App.css'\nimport './Color.css'\n\nimport Chat from './Chat.js'\n\n\n\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n\nclass App extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        isAuthenticated: false,\n        isAdmin: false,\n        userId: -1,\n        username: '',\n        jwt: null\n      };\n    }\n\n    userHasAuthenticated = (authenticated, userId, username, isAdmin, jwt) => {\n      console.log(userId);\n      console.log(username);\n      console.log(\"----------\")\n      this.setState({ isAuthenticated: authenticated, userId : userId, username : username, isAdmin: isAdmin, jwt : jwt });\n      console.log(this.state);\n      console.log(\"---end of state---\")\n    }\n\n    logout = () => {\n      this.setState({isAuthenticated : false, userId: -1, username: '', isAdmin: false, jwt: null});\n    }\n\n    componentDidMount() {\n        // Call our fetch function below once the component mounts\n        this.callBackendAPI()\n            .then(res => this.setState({ data: res.express }))  \n            .catch(err => console.log(err));\n    }\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callBackendAPI = async () => {\n        const response = await fetch('/express_backend');\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n\n    handleLogout = event => {\n      this.logout();\n      this.props.history.push(\"/login\");\n    }\n\n    // render() {\n    //     const childProps = {\n    //       isAuthenticated: this.state.isAuthenticated,\n    //       userHasAuthenticated: this.userHasAuthenticated\n    //     };\n    //     return (\n    //         <div className=\"App\">\n    //             <header className=\"App-header\">\n    //                 <h1 className=\"App-title\">Date-a-base</h1>\n    //             </header>\n    //\n    //             <p className=\"App-intro\">{this.state.data}</p>\n    //             <Login />\n    //             <User myUserId={1}/>\n    //         </div>\n    //     );\n    // }\n\n    render() {\n    const childProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      userHasAuthenticated: this.userHasAuthenticated,\n      myUserId: this.state.userId,\n      username: this.state.username,\n      isAdmin: this.state.isAdmin,\n      jwt: this.state.jwt\n    };\n    return (\n      <div className=\"App container\">\n        <Navbar fluid collapseOnSelect>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <Link to=\"/\" userId={this.state.userId}>Date-a-base</Link>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n          </Navbar.Header>\n          <Navbar.Collapse>\n          <Navbar.Collapse>\n          <Nav pullRight>\n            {this.state.isAuthenticated\n              ? <NavItem onClick={this.handleLogout}>Logout</NavItem>\n              : <Fragment>\n                  <LinkContainer to=\"/register\">\n                    <NavItem>Register</NavItem>\n                  </LinkContainer>\n                  <LinkContainer to=\"/login\">\n                    <NavItem>Login</NavItem>\n                  </LinkContainer>\n                </Fragment>\n            }\n          </Nav>\n        </Navbar.Collapse>\n        </Navbar.Collapse>\n        </Navbar>\n        {/*<Home />*/}\n        <Routes childProps={childProps} />\n      </div>\n\n    );\n  }\n}\n\n// export default App;\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}