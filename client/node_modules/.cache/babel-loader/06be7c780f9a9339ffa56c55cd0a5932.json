{"ast":null,"code":"var _jsxFileName = \"/Users/Rhino/date-a-base/client/src/Profile.js\";\nimport React, { Component } from 'react';\nimport \"./Profile.css\";\nimport ElectricBass from './images/electricBass.png';\nimport Trophy from \"./Trophy.js\";\nimport Post from \"./Post\";\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      baseLogo: null,\n      trophyIds: []\n    };\n\n    this.retrieveTrophy = async () => {\n      console.log('get api is called');\n      console.log(\"user id: \" + this.props.myUserId);\n      let url = '/get_trophies?userId=' + this.props.myUserId;\n      const response = await fetch(url);\n      const json = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(json.message);\n      }\n\n      console.log(json);\n      return json;\n    };\n\n    this.renderTrofiess = () => {\n      let trophies = []; // Add the posts\n\n      let trophyIds = this.state.trophyIds;\n\n      for (let i = 0; i < trophyIds.length; ++i) {\n        trophies.push(React.createElement(Trophy, {\n          trophyId: trophyIds[i].trophyId,\n          myUserId: this.props.myUserId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }));\n      }\n\n      return trophies;\n    };\n  }\n\n  componentWillReceiveProps() {\n    if (this.props.baseId == 2) {\n      this.setState({\n        baseLogo: ElectricBass\n      }); // this.classMethod();\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"call componentDidMount\"); // Load the trophies\n\n    this.retrieveTrophy().then(res => {\n      console.log(res.trophyIds);\n      console.log(typeof res.trophyIds);\n      this.setState({\n        trophyIds: res.trophyIds\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Profile-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"User Profile Here\"), React.createElement(\"img\", {\n      src: ElectricBass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Username: \", this.props.username), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Horoscope: \", this.props.horoscope), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Points: \", this.props.log), this.renderTrofiess());\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/Rhino/date-a-base/client/src/Profile.js"],"names":["React","Component","ElectricBass","Trophy","Post","Profile","state","baseLogo","trophyIds","retrieveTrophy","console","log","props","myUserId","url","response","fetch","json","status","Error","message","renderTrofiess","trophies","i","length","push","trophyId","componentWillReceiveProps","baseId","setState","componentDidMount","then","res","render","username","horoscope"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport \"./Profile.css\";\nimport ElectricBass from './images/electricBass.png';\nimport Trophy from \"./Trophy.js\";\nimport Post from \"./Post\";\n\n\nclass Profile extends Component\n{\n    state = {\n        baseLogo: null,\n        trophyIds: []\n    };\n\n    componentWillReceiveProps(){\n      if(this.props.baseId == 2){\n        this.setState({baseLogo: ElectricBass });\n        // this.classMethod();\n      }\n    }\n\n    componentDidMount() {\n        console.log(\"call componentDidMount\")\n        // Load the trophies\n        this.retrieveTrophy()\n            .then(res => {\n                console.log(res.trophyIds);\n                console.log(typeof res.trophyIds);\n                this.setState( {\n\n                trophyIds: res.trophyIds\n            });\n            });\n    }\n\n    retrieveTrophy = async () => {\n        console.log('get api is called');\n        console.log(\"user id: \" + this.props.myUserId);\n        let url = '/get_trophies?userId=' + this.props.myUserId;\n        const response = await fetch(url)\n\n        const json = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(json.message)\n        }\n        console.log(json);\n        return json;\n    }\n\n    renderTrofiess = () =>\n    {\n        let trophies = [];\n\n        // Add the posts\n        let trophyIds = this.state.trophyIds;\n        for (let i = 0; i < trophyIds.length; ++i)\n        {\n            trophies.push(<Trophy trophyId = {trophyIds[i].trophyId} myUserId={this.props.myUserId}/>);\n        }\n\n        return trophies;\n    }\n\n    render() {\n        return (\n            <div className='Profile-container'>\n                <h1>User Profile Here</h1>\n                {/*<img src={ElectricBass} alt=\"ElectricBass\" />;*/}\n                {/*todo: using baseLogo can change logo based on baseId, but cannot be rendered after user login*/}\n                {/*<img src={this.state.baseLogo} />*/}\n                <img src={ElectricBass} />\n                {/*<img src='./images/electricBass.png' />*/}\n                <p>Username: {this.props.username}</p>\n                <p>Horoscope: {this.props.horoscope}</p>\n                {/*<span>&nbsp;</span>*/}\n                <p>Points: {this.props.log}</p>\n                {/*<p>BaseId: {this.props.baseId}</p>*/}\n                {/*<Trophy trophyIds={this.state.trophyIds}/>*/}\n                {this.renderTrofiess()}\n            </div>\n        );\n    }\n}\n\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}