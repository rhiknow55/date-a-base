{"ast":null,"code":"var _jsxFileName = \"/Users/Azio/Documents/GitHub/date-a-base/client/src/Chat.js\";\nimport React, { Component } from 'react';\nimport MessageList from './MessageList.js';\nimport SendMessageForm from './SendMessageForm.js';\nconst DUMMY_DATA = [{\n  senderId: 'user1',\n  text: 'Hey, how is it going?'\n}, {\n  senderId: 'user2',\n  text: 'Great! How about you?'\n}, {\n  senderId: 'user1',\n  text: 'Good to hear! I am great as well'\n}];\n\nclass Chat extends React.Component {\n  constructor() {\n    super();\n\n    this.retrieveMessages = async () => {\n      let url = '/retrieve_messages';\n      const response = await fetch(url); // const response = await fetch('/retrieve_posts?', {\n      //     method: 'POST',\n      //     headers: new Headers({\n      //         'Accept': 'application/json, text/plain, */*',\n      //         'Content-Type': 'application/json'\n      //     }),\n      //     body: JSON.stringify({\n      //         numberOfPosts: NUMBER_OF_POSTS_TO_LOAD\n      //     })\n      // })\n\n      const json = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(json.messages);\n      }\n\n      return json;\n    };\n\n    this.renderPosts = () => {\n      let messages = []; // Add the posts\n\n      let messageIds = this.state.messages;\n\n      for (let i = 0; i < messageIds.length; ++i) {\n        messages.push(React.createElement(Message, {\n          postId: postIds[i].postid,\n          myUserId: this.props.myUserId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }));\n      }\n\n      return posts;\n    };\n\n    this.state = {\n      messages: [] //this.sendMessage = this.sendMessage.bind(this)\n\n    };\n  }\n\n  componentDidMount() {\n    // Load the feed contents\n    this.retrieveMessages().then(res => this.setState({\n      // messages: res.postIds\n      messages: res.messageIds\n    }));\n  } // need to retrieve messages\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(MessageList, {\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(SendMessageForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/Azio/Documents/GitHub/date-a-base/client/src/Chat.js"],"names":["React","Component","MessageList","SendMessageForm","DUMMY_DATA","senderId","text","Chat","constructor","retrieveMessages","url","response","fetch","json","status","Error","messages","renderPosts","messageIds","state","i","length","push","postIds","postid","props","myUserId","posts","componentDidMount","then","res","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AAGA,MAAMC,UAAU,GAAG,CACf;AACIC,EAAAA,QAAQ,EAAE,OADd;AAEIC,EAAAA,IAAI,EAAE;AAFV,CADe,EAKf;AACID,EAAAA,QAAQ,EAAE,OADd;AAEIC,EAAAA,IAAI,EAAE;AAFV,CALe,EASf;AACID,EAAAA,QAAQ,EAAE,OADd;AAEIC,EAAAA,IAAI,EAAE;AAFV,CATe,CAAnB;;AAiBA,MAAMC,IAAN,SAAmBP,KAAK,CAACC,SAAzB,CAAmC;AAI/BO,EAAAA,WAAW,GAAG;AACV;;AADU,SAqBdC,gBArBc,GAqBK,YAAY;AAC3B,UAAIC,GAAG,GAAG,oBAAV;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B,CAF2B,CAI3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;;AAEA,UAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AACzB,cAAMC,KAAK,CAACF,IAAI,CAACG,QAAN,CAAX;AACH;;AACD,aAAOH,IAAP;AACH,KA1Ca;;AAAA,SA4CdI,WA5Cc,GA4CA,MACd;AACI,UAAID,QAAQ,GAAG,EAAf,CADJ,CAGI;;AACA,UAAIE,UAAU,GAAG,KAAKC,KAAL,CAAWH,QAA5B;;AACA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuC,EAAED,CAAzC,EACA;AACIJ,QAAAA,QAAQ,CAACM,IAAT,CAAc,oBAAC,OAAD;AAAS,UAAA,MAAM,EAAIC,OAAO,CAACH,CAAD,CAAP,CAAWI,MAA9B;AAAsC,UAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AACH;;AAED,aAAOC,KAAP;AACH,KAxDa;;AAEV,SAAKR,KAAL,GAAa;AACTH,MAAAA,QAAQ,EAAE,EADD,CAGb;;AAHa,KAAb;AAIH;;AAEDY,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKnB,gBAAL,GACKoB,IADL,CACUC,GAAG,IAAI,KAAKC,QAAL,CAAe;AACzB;AACCf,MAAAA,QAAQ,EAAEc,GAAG,CAACZ;AAFU,KAAf,CADjB;AAOH,GArB8B,CAwB/B;;;AAsCAc,EAAAA,MAAM,GAAG;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWH,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAOH;;AAvE8B;;AA0EnC,eAAeT,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport MessageList from './MessageList.js';\nimport SendMessageForm from './SendMessageForm.js'\n\n\nconst DUMMY_DATA = [\n    {\n        senderId: 'user1',\n        text: 'Hey, how is it going?'\n    },\n    {\n        senderId: 'user2',\n        text: 'Great! How about you?'\n    },\n    {\n        senderId: 'user1',\n        text: 'Good to hear! I am great as well'\n    }\n]\n\n\n\nclass Chat extends React.Component {\n\n\n\n    constructor() {\n        super()\n        this.state = {\n            messages: []\n        }\n        //this.sendMessage = this.sendMessage.bind(this)\n    }\n\n    componentDidMount() {\n        // Load the feed contents\n        this.retrieveMessages()\n            .then(res => this.setState( {\n               // messages: res.postIds\n                messages: res.messageIds\n\n\n            }));\n    }\n\n\n    // need to retrieve messages\n    retrieveMessages = async () => {\n        let url = '/retrieve_messages';\n        const response = await fetch(url)\n\n        // const response = await fetch('/retrieve_posts?', {\n        //     method: 'POST',\n        //     headers: new Headers({\n        //         'Accept': 'application/json, text/plain, */*',\n        //         'Content-Type': 'application/json'\n        //     }),\n        //     body: JSON.stringify({\n        //         numberOfPosts: NUMBER_OF_POSTS_TO_LOAD\n        //     })\n        // })\n\n        const json = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(json.messages)\n        }\n        return json;\n    }\n\n    renderPosts = () =>\n    {\n        let messages = [];\n\n        // Add the posts\n        let messageIds = this.state.messages;\n        for (let i = 0; i < messageIds.length; ++i)\n        {\n            messages.push(<Message postId = {postIds[i].postid} myUserId={this.props.myUserId}/>);\n        }\n\n        return posts;\n    }\n\n    render() {\n\n        return (\n            <div className=\"Chat\">\n                <MessageList messages={this.state.messages}/>\n                <SendMessageForm />\n            </div>\n\n    )\n    }\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}