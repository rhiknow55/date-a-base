{"ast":null,"code":"var _jsxFileName = \"/Users/Rhino/date-a-base/client/src/Comment.js\";\nimport React, { Component } from 'react';\nimport './Post.css';\nexport class CommentSection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.retrieveFeed = async () => {\n      let url = '/retrieve_comments?postId=' + this.props.postId;\n      const response = await fetch(url);\n      const json = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(json.message);\n      }\n\n      console.log('retrieve');\n      return json;\n    };\n\n    this.renderComments = () => {\n      if (!this.state.hasComments) return;\n      let commentsHTML = []; // Add the comments\n\n      let comments = this.state.comments;\n\n      for (let i = 0; i < comments.length; ++i) {\n        comments.push(React.createElement(CommentBox, {\n          postId: this.state.postId,\n          commentId: comments[i].commentId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }));\n      }\n\n      return commentsHTML;\n    };\n\n    this.state = {\n      hasComments: false,\n      postId: this.props.postId,\n      comments: []\n    };\n  }\n\n  componentDidMount() {\n    // Load the comments for this post\n    this.retrieveFeed().then(res => {\n      this.setState({\n        hasComments: true,\n        comments: res.commentIds\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"CommentSection-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"CommentSection\");\n  }\n\n}\nexport class AddComment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postId: this.props.postId\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"AddComment-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    });\n  }\n\n}\nexport class CommentBox extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Comment-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Comment\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/Rhino/date-a-base/client/src/Comment.js"],"names":["React","Component","CommentSection","constructor","props","retrieveFeed","url","postId","response","fetch","json","status","Error","message","console","log","renderComments","state","hasComments","commentsHTML","comments","i","length","push","commentId","componentDidMount","then","res","setState","commentIds","render","AddComment","CommentBox"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;AAEA,OAAO,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAC1CE,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;;AADJ,SAoBAC,YApBA,GAoBe,YAAY;AACvB,UAAIC,GAAG,GAAG,+BAA+B,KAAKF,KAAL,CAAWG,MAApD;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,CAA5B;AAEA,YAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;;AAEA,UAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AACzB,cAAMC,KAAK,CAACF,IAAI,CAACG,OAAN,CAAX;AACH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,aAAOL,IAAP;AACH,KA/BD;;AAAA,SAkCAM,cAlCA,GAkCiB,MACjB;AACI,UAAI,CAAC,KAAKC,KAAL,CAAWC,WAAhB,EACI;AAEJ,UAAIC,YAAY,GAAG,EAAnB,CAJJ,CAKI;;AACA,UAAIC,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAA1B;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACE,MAA7B,EAAqC,EAAED,CAAvC,EACA;AACID,QAAAA,QAAQ,CAACG,IAAT,CAAc,oBAAC,UAAD;AAAY,UAAA,MAAM,EAAE,KAAKN,KAAL,CAAWV,MAA/B;AAAuC,UAAA,SAAS,EAAIa,QAAQ,CAACC,CAAD,CAAR,CAAYG,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AACH;;AAED,aAAOL,YAAP;AACH,KAhDD;;AAEI,SAAKF,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,KADJ;AAETX,MAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG,MAFV;AAGTa,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKpB,YAAL,GACKqB,IADL,CACUC,GAAG,IAAI;AACb,WAAKC,QAAL,CAAc;AACVV,QAAAA,WAAW,EAAE,IADH;AAEVE,QAAAA,QAAQ,EAAEO,GAAG,CAACE;AAFJ,OAAd;AAIP,KANG;AAOH;;AAgCDC,EAAAA,MAAM,GACN;AACI,WACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ;AAMH;;AA5DyC;AA+D9C,OAAO,MAAMC,UAAN,SAAyB9B,SAAzB,CAAmC;AACtCE,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKa,KAAL,GAAa;AACTV,MAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG;AADV,KAAb;AAGH;;AAEDuB,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAfqC;AAkB1C,OAAO,MAAME,UAAN,SAAyB/B,SAAzB,CAAmC;AACtC6B,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ;AAMH;;AARqC","sourcesContent":["import React, {Component} from 'react';\nimport './Post.css';\n\nexport class CommentSection extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            hasComments: false,\n            postId: this.props.postId,\n            comments: []\n        }\n    }\n\n    componentDidMount() {\n        // Load the comments for this post\n        this.retrieveFeed()\n            .then(res => {\n            this.setState({\n                hasComments: true,\n                comments: res.commentIds\n            });\n    });\n    }\n\n    retrieveFeed = async () => {\n        let url = '/retrieve_comments?postId=' + this.props.postId;\n        const response = await fetch(url)\n\n        const json = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(json.message)\n        }\n        console.log('retrieve')\n        return json;\n    }\n\n    // Translates this.state.commentIds into legible React Comment objects\n    renderComments = () =>\n    {\n        if (!this.state.hasComments)\n            return;\n\n        let commentsHTML = [];\n        // Add the comments\n        let comments = this.state.comments;\n        for (let i = 0; i < comments.length; ++i)\n        {\n            comments.push(<CommentBox postId={this.state.postId} commentId = {comments[i].commentId}/>);\n        }\n\n        return commentsHTML;\n    }\n\n    render()\n    {\n        return(\n            <div className=\"CommentSection-container\">\n                CommentSection\n        \n            </div>\n        );\n    }\n}\n\nexport class AddComment extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            postId: this.props.postId,\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"AddComment-container\">\n\n            </div>\n        );\n    }\n}\n\nexport class CommentBox extends Component {\n    render() {\n        return (\n            <div className='Comment-container'>\n                <p>Comment</p>\n\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}