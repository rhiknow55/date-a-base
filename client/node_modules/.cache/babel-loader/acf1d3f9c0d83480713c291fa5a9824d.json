{"ast":null,"code":"var _jsxFileName = \"/Users/Rhino/date-a-base/client/src/Post.js\";\nimport React, { Component } from 'react';\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.retrieveFeed = async () => {\n      let url = '/get_post?postId=' + 1;\n      const response = await fetch(url);\n      const json = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(json.message);\n      }\n\n      return json;\n    };\n\n    this.getUserData = function () {\n      this.retrieveUserData().then(res => this.setState({\n        user: {\n          username: res.username,\n          horoscope: res.horoscope,\n          log: res.log\n        }\n      }));\n    };\n\n    this.retrieveUserData = async () => {\n      const response = await fetch('/user_data?userId=' + this.state.userId);\n      const json = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(json.message);\n      }\n\n      return json;\n    };\n\n    this.state = {\n      postId: this.props.postId,\n      message: null,\n      image: null,\n      userId: null,\n      user: {\n        username: null,\n        horoscope: null,\n        log: null\n      }\n    };\n  }\n\n  componentDidMount() {\n    // Load the feed contents\n    this.retrieveFeed().then(res => this.setState({\n      message: res.message,\n      image: res.image,\n      userId: res.userId\n    }), this.getUserData());\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Post Id = \", this.state.postId), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Username = \", this.state.userId), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Message = \", this.state.message));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/Rhino/date-a-base/client/src/Post.js"],"names":["React","Component","Post","constructor","props","retrieveFeed","url","response","fetch","json","status","Error","message","getUserData","retrieveUserData","then","res","setState","user","username","horoscope","log","state","userId","postId","image","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CACA;AACIE,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;;AADJ,SAyBAC,YAzBA,GAyBe,YAAY;AACvB,UAAIC,GAAG,GAAG,sBAAsB,CAAhC;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AAEA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;;AAEA,UAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AACzB,cAAMC,KAAK,CAACF,IAAI,CAACG,OAAN,CAAX;AACH;;AACD,aAAOH,IAAP;AACH,KAnCD;;AAAA,SAqCAI,WArCA,GAqCc,YACd;AACI,WAAKC,gBAAL,GACKC,IADL,CACUC,GAAG,IAAI,KAAKC,QAAL,CAAe;AAC5BC,QAAAA,IAAI,EAAE;AAACC,UAAAA,QAAQ,EAAEH,GAAG,CAACG,QAAf;AAAyBC,UAAAA,SAAS,EAAEJ,GAAG,CAACI,SAAxC;AAAmDC,UAAAA,GAAG,EAAEL,GAAG,CAACK;AAA5D;AADsB,OAAf,CADjB;AAIH,KA3CD;;AAAA,SA6CAP,gBA7CA,GA6CmB,YAAY;AAC3B,YAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,KAAKc,KAAL,CAAWC,MAAnC,CAA5B;AACA,YAAMd,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;;AAEA,UAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AACzB,cAAMC,KAAK,CAACF,IAAI,CAACG,OAAN,CAAX;AACH;;AACD,aAAOH,IAAP;AACH,KArDD;;AAEI,SAAKa,KAAL,GAAa;AACTE,MAAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWoB,MADV;AAETZ,MAAAA,OAAO,EAAE,IAFA;AAGTa,MAAAA,KAAK,EAAE,IAHE;AAITF,MAAAA,MAAM,EAAE,IAJC;AAKTL,MAAAA,IAAI,EAAE;AAACC,QAAAA,QAAQ,EAAE,IAAX;AAAiBC,QAAAA,SAAS,EAAE,IAA5B;AAAkCC,QAAAA,GAAG,EAAE;AAAvC;AALG,KAAb;AAOH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKrB,YAAL,GACKU,IADL,CACUC,GAAG,IAAI,KAAKC,QAAL,CAAe;AAC5BL,MAAAA,OAAO,EAAEI,GAAG,CAACJ,OADe;AAE5Ba,MAAAA,KAAK,EAAET,GAAG,CAACS,KAFiB;AAG5BF,MAAAA,MAAM,EAAEP,GAAG,CAACO;AAHgB,KAAf,CADjB,EAMI,KAAKV,WAAL,EANJ;AAUH;;AAgCDc,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,KAAKL,KAAL,CAAWE,MAAzB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAe,KAAKF,KAAL,CAAWC,MAA1B,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,KAAKD,KAAL,CAAWV,OAAzB,CAHJ,CADJ;AAOH;;AAjEL;;AAoEA,eAAeV,IAAf","sourcesContent":["import React, { Component }from 'react';\n\nclass Post extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            postId: this.props.postId,\n            message: null,\n            image: null,\n            userId: null,\n            user: {username: null, horoscope: null, log: null}\n        }\n    }\n\n    componentDidMount() {\n        // Load the feed contents\n        this.retrieveFeed()\n            .then(res => this.setState( {\n            message: res.message,\n            image: res.image,\n            userId: res.userId\n        }),\n            this.getUserData()\n    );\n\n\n    }\n\n    retrieveFeed = async () => {\n        let url = '/get_post?postId=' + 1;\n        const response = await fetch(url)\n\n        const json = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(json.message)\n        }\n        return json;\n    }\n\n    getUserData = function()\n    {\n        this.retrieveUserData()\n            .then(res => this.setState( {\n            user: {username: res.username, horoscope: res.horoscope, log: res.log}\n        }));\n    }\n\n    retrieveUserData = async () => {\n        const response = await fetch('/user_data?userId=' + this.state.userId);\n        const json = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(json.message)\n        }\n        return json;\n    }\n\n    render() {\n        return (\n            <div>\n                <p>Post Id = {this.state.postId}</p>\n                <p>Username = {this.state.userId}</p>\n                <p>Message = {this.state.message}</p>\n            </div>\n        );\n    }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}