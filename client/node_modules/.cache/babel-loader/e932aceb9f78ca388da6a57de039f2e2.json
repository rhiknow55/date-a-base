{"ast":null,"code":"var _jsxFileName = \"/Users/Rhino/date-a-base/client/src/Register.js\";\nimport React, { Component } from \"react\";\nimport { HelpBlock, FormGroup, FormControl, Button } from \"react-bootstrap\"; // import LoaderButton from \"../components/LoaderButton\";\n\nimport \"./Register.css\";\nimport User from \"./User\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n      this.setState({\n        newUser: \"test\"\n      });\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.handleConfirmationSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      loginName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      confirmationCode: \"\",\n      newUser: null\n    };\n  }\n\n  validateForm() {\n    return this.state.loginName.length > 0 && this.state.password.length > 0 && this.state.password === this.state.confirmPassword;\n  }\n\n  validateConfirmationForm() {\n    return this.state.confirmationCode.length > 0;\n  }\n\n  renderQuestions() {\n    return React.createElement(\"div\", {\n      className: \"Questions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"lander\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Display sorting hat questions here!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"----\")));\n  }\n\n  renderForm() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"loginName\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Login Name\"), React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"loginName\",\n      value: this.state.loginName,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Password\"), React.createElement(FormControl, {\n      value: this.state.password,\n      onChange: this.handleChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"confirmPassword\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(FormControl, {\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      disabled: !this.validateForm(),\n      type: \"submit\",\n      isLoading: this.state.isLoading,\n      text: \"Signup\",\n      loadingText: \"Signing up\\u2026\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.newUser === null ? this.renderForm() : this.renderQuestions());\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/Rhino/date-a-base/client/src/Register.js"],"names":["React","Component","HelpBlock","FormGroup","FormControl","Button","User","Register","constructor","props","handleChange","event","setState","target","id","value","handleSubmit","preventDefault","isLoading","newUser","handleConfirmationSubmit","state","loginName","password","confirmPassword","confirmationCode","validateForm","length","validateConfirmationForm","renderQuestions","renderForm","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,WAHF,EAIEC,MAJF,QAKO,iBALP,C,CAMA;;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyBnBC,YAzBmB,GAyBJC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,GAAmBH,KAAK,CAACE,MAAN,CAAaE;AADpB,OAAd;AAGD,KA7BkB;;AAAA,SA+BnBC,YA/BmB,GA+BJ,MAAML,KAAN,IAAe;AAC5BA,MAAAA,KAAK,CAACM,cAAN;AAEA,WAAKL,QAAL,CAAc;AAAEM,QAAAA,SAAS,EAAE;AAAb,OAAd;AAEA,WAAKN,QAAL,CAAc;AAAEO,QAAAA,OAAO,EAAE;AAAX,OAAd;AAEA,WAAKP,QAAL,CAAc;AAAEM,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAvCkB;;AAAA,SAyCnBE,wBAzCmB,GAyCQ,MAAMT,KAAN,IAAe;AACxCA,MAAAA,KAAK,CAACM,cAAN;AAEA,WAAKL,QAAL,CAAc;AAAEM,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KA7CkB;;AAGjB,SAAKG,KAAL,GAAa;AACXH,MAAAA,SAAS,EAAE,KADA;AAEXI,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,eAAe,EAAE,EAJN;AAKXC,MAAAA,gBAAgB,EAAE,EALP;AAMXN,MAAAA,OAAO,EAAE;AANE,KAAb;AAQD;;AAEDO,EAAAA,YAAY,GAAG;AACb,WACE,KAAKL,KAAL,CAAWC,SAAX,CAAqBK,MAArB,GAA8B,CAA9B,IACA,KAAKN,KAAL,CAAWE,QAAX,CAAoBI,MAApB,GAA6B,CAD7B,IAEA,KAAKN,KAAL,CAAWE,QAAX,KAAwB,KAAKF,KAAL,CAAWG,eAHrC;AAKD;;AAEDI,EAAAA,wBAAwB,GAAG;AACzB,WAAO,KAAKP,KAAL,CAAWI,gBAAX,CAA4BE,MAA5B,GAAqC,CAA5C;AACD;;AAwBDE,EAAAA,eAAe,GAAG;AAChB,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,CADF;AASD;;AAEDC,EAAAA,UAAU,GAAG;AACX,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKd,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAiC,MAAA,MAAM,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,WAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWC,SAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKZ,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAUE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,UAArB;AAAgC,MAAA,MAAM,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,WAAD;AACE,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWE,QADpB;AAEE,MAAA,QAAQ,EAAE,KAAKb,YAFjB;AAGE,MAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAVF,EAkBE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,iBAArB;AAAuC,MAAA,MAAM,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,WAAD;AACE,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWG,eADpB;AAEE,MAAA,QAAQ,EAAE,KAAKd,YAFjB;AAGE,MAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAlBF,EA0BE,oBAAC,MAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,MAAM,EAAC,OAFT;AAGE,MAAA,QAAQ,EAAE,CAAC,KAAKgB,YAAL,EAHb;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,SAAS,EAAE,KAAKL,KAAL,CAAWH,SALxB;AAME,MAAA,IAAI,EAAC,QANP;AAOE,MAAA,WAAW,EAAC,kBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,CADF;AAsCD;;AAEDa,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAWF,OAAX,KAAuB,IAAvB,GACG,KAAKW,UAAL,EADH,GAEG,KAAKD,eAAL,EAHN,CADF;AAOD;;AA7G8B;;AAgHjC,eAAetB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  HelpBlock,\n  FormGroup,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\n// import LoaderButton from \"../components/LoaderButton\";\nimport \"./Register.css\";\nimport User from \"./User\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      loginName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      confirmationCode: \"\",\n      newUser: null\n    };\n  }\n\n  validateForm() {\n    return (\n      this.state.loginName.length > 0 &&\n      this.state.password.length > 0 &&\n      this.state.password === this.state.confirmPassword\n    );\n  }\n\n  validateConfirmationForm() {\n    return this.state.confirmationCode.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    this.setState({ isLoading: true });\n\n    this.setState({ newUser: \"test\" });\n\n    this.setState({ isLoading: false });\n  }\n\n  handleConfirmationSubmit = async event => {\n    event.preventDefault();\n\n    this.setState({ isLoading: true });\n  }\n\n  renderQuestions() {\n    return (\n      <div className=\"Questions\">\n        <div className=\"lander\">\n          <h1>Display sorting hat questions here!</h1>\n          <p>----</p>\n        </div>\n        {/*<User myUserId={1}/>*/}\n      </div>\n    );\n  }\n\n  renderForm() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormGroup controlId=\"loginName\" bsSize=\"large\">\n          <label>Login Name</label>\n          <FormControl\n            autoFocus\n            type=\"loginName\"\n            value={this.state.loginName}\n            onChange={this.handleChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            value={this.state.password}\n            onChange={this.handleChange}\n            type=\"password\"\n          />\n        </FormGroup>\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n          <ControlLabel>Confirm Password</ControlLabel>\n          <FormControl\n            value={this.state.confirmPassword}\n            onChange={this.handleChange}\n            type=\"password\"\n          />\n        </FormGroup>\n        <Button\n          block\n          bsSize=\"large\"\n          disabled={!this.validateForm()}\n          type=\"submit\"\n          isLoading={this.state.isLoading}\n          text=\"Signup\"\n          loadingText=\"Signing up…\"\n        />\n      </form>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Register\">\n        {this.state.newUser === null\n          ? this.renderForm()\n          : this.renderQuestions()}\n      </div>\n    );\n  }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}