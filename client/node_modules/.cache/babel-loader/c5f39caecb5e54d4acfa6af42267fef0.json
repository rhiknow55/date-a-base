{"ast":null,"code":"var _jsxFileName = \"/Users/Rhino/date-a-base/client/src/Feed.js\";\nimport React, { Component } from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { Constants } from 'expo';\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  fixedRatio: {\n    backgroundColor: 'rebeccapurple',\n    flex: 1,\n    aspectRatio: 1\n  }\n});\n\nclass Feed extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null\n    };\n\n    this.retrieveFeed = async () => {\n      const response = await fetch('/user_data');\n      const json = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(json.message);\n      }\n\n      return json;\n    };\n  }\n\n  componentDidMount() {\n    // Load the feed contents\n    this.retrieveFeed().then(res => this.setState({\n      data: res.data\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"User\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(View, {\n      style: styles.fixedRatio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Feed\"), \"Has some stuff like filter, then the scrollable layout with posts\");\n  }\n\n}\n\nexport default Feed;","map":{"version":3,"sources":["/Users/Rhino/date-a-base/client/src/Feed.js"],"names":["React","Component","Text","View","StyleSheet","Constants","styles","create","container","flex","flexDirection","alignItems","justifyContent","backgroundColor","fixedRatio","aspectRatio","Feed","state","data","retrieveFeed","response","fetch","json","status","Error","message","componentDidMount","then","res","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,UAArB,QAAuC,cAAvC;AACA,SAASC,SAAT,QAA0B,MAA1B;AAEA,MAAMC,MAAM,GAAGF,UAAU,CAACG,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,aAAa,EAAE,KAFR;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE,QAJT;AAKPC,IAAAA,eAAe,EAAE;AALV,GADkB;AAQ7BC,EAAAA,UAAU,EAAE;AACRD,IAAAA,eAAe,EAAE,eADT;AAERJ,IAAAA,IAAI,EAAE,CAFE;AAGRM,IAAAA,WAAW,EAAE;AAHL;AARiB,CAAlB,CAAf;;AAgBA,MAAMC,IAAN,SAAmBf,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBgB,KADyB,GACjB;AACJC,MAAAA,IAAI,EAAE;AADF,KADiB;;AAAA,SAazBC,YAbyB,GAaV,YAAY;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;;AAEA,UAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AACzB,cAAMC,KAAK,CAACF,IAAI,CAACG,OAAN,CAAX;AACH;;AACD,aAAOH,IAAP;AACH,KArBwB;AAAA;;AAKzBI,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKP,YAAL,GACKQ,IADL,CACUC,GAAG,IAAI,KAAKC,QAAL,CAAe;AACxBX,MAAAA,IAAI,EAAEU,GAAG,CAACV;AADc,KAAf,CADjB;AAIH;;AAYDY,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAExB,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACQ,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,sEADJ;AASH;;AAjCwB;;AAqC7B,eAAeE,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { Constants } from 'expo';\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'white'\n    },\n    fixedRatio: {\n        backgroundColor: 'rebeccapurple',\n        flex: 1,\n        aspectRatio: 1\n    },\n});\n\n\nclass Feed extends Component {\n    state = {\n        data: null\n    };\n\n    componentDidMount() {\n        // Load the feed contents\n        this.retrieveFeed()\n            .then(res => this.setState( {\n                data: res.data\n            }));\n    }\n\n    retrieveFeed = async () => {\n        const response = await fetch('/user_data');\n        const json = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(json.message)\n        }\n        return json;\n    }\n\n    render() {\n        return (\n            <div className=\"User\">\n                <View style={styles.container}>\n                    <View style={styles.fixedRatio} />\n                </View>\n                <p>Feed</p>\n                Has some stuff like filter, then the scrollable layout with posts\n            </div>\n        );\n    }\n}\n\n\nexport default Feed;"]},"metadata":{},"sourceType":"module"}