{"ast":null,"code":"var _jsxFileName = \"/Users/Rhino/date-a-base/client/src/Login.js\";\nimport React, { Component } from 'react'; //import { Link } from 'react-router-dom';\n\nimport { Button, FormGroup, FormControl } from \"react-bootstrap\";\nimport \"./Login.css\"; // import logo from './logo.svg';\n// import './App.css';\n\nimport User from './User.js';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      try {\n        this.userLogin(); // this.props.history.push(\"/user\");\n      } catch (e) {\n        alert(e.message);\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.userLogin = async () => {\n      var userLoginName = this.state.loginName;\n      var userPassword = this.state.password;\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          loginName: userLoginName,\n          password: userPassword\n        })\n      }); // let Router = window.ReactRouter;\n      // let RouteHandler = Router.RouteHandler;\n      // let Route = Router.Route;\n      // let DefaultRoute = Router.DefaultRoute;\n      // let hashHistory = Router.hashHistory;\n\n      if (response.status !== 200) {\n        //throw Error(body.message)\n        if (response.status == 404) {\n          alert(\"LoginName does not exist\");\n        } else if (response.status == 400) {\n          alert(\"LoginName and password do not match\");\n        }\n      } else {\n        console.log(\"Successfully logged in\");\n        this.props.userHasAuthenticated(true);\n        this.props.history.push(\"/\"); // User.setState({\n        //   loginName: userLoginName\n        // });\n        // hashHistory.push('/user')\n      } //return body;\n\n    };\n\n    this.state = {\n      loginName: \"\",\n      password: \"\"\n    };\n  }\n\n  validateForm() {\n    return this.state.loginName.length > 0 && this.state.password.length > 0;\n  }\n\n  handleAlternate(event) {\n    event.preventDefault();\n    console.log('on click user registration'); // this.props.history.push('/register');\n    //  try{\n    //    this.userRegistration()\n    //  } catch (e) {\n    //   alert(e.message);\n    // }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"loginName\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"LoginName\"), React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"loginName\",\n      value: this.state.loginName,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Password\"), React.createElement(FormControl, {\n      value: this.state.password,\n      onChange: this.handleChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      disabled: !this.validateForm(),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/Rhino/date-a-base/client/src/Login.js"],"names":["React","Component","Button","FormGroup","FormControl","User","Login","constructor","props","handleSubmit","event","preventDefault","userLogin","e","alert","message","handleChange","setState","target","id","value","userLoginName","state","loginName","userPassword","password","response","fetch","method","headers","body","JSON","stringify","status","console","log","userHasAuthenticated","history","push","validateForm","length","handleAlternate","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n//import { Link } from 'react-router-dom';\nimport { Button, FormGroup, FormControl} from \"react-bootstrap\";\nimport \"./Login.css\";\n// import logo from './logo.svg';\n// import './App.css';\nimport User from './User.js';\n\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loginName: \"\",\n      password: \"\"\n    };\n\n  }\n\n  validateForm() {\n    return this.state.loginName.length > 0 && this.state.password.length > 0;\n  }\n\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    try{\n      this.userLogin();\n      // this.props.history.push(\"/user\");\n    } catch (e) {\n     alert(e.message);\n   }\n\n  }\n\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleAlternate(event) {\n    event.preventDefault();\n    console.log('on click user registration');\n    // this.props.history.push('/register');\n   //  try{\n   //    this.userRegistration()\n   //  } catch (e) {\n   //   alert(e.message);\n   // }\n\n  }\n\n  userLogin = async () => {\n    var userLoginName = this.state.loginName;\n    var userPassword = this.state.password;\n\n    const response = await fetch('/login', {\n      method: 'POST',\n      headers: {\n       'Accept': 'application/json',\n       'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        loginName: userLoginName,\n        password: userPassword,\n      })\n    });\n\n    // let Router = window.ReactRouter;\n    // let RouteHandler = Router.RouteHandler;\n    // let Route = Router.Route;\n    // let DefaultRoute = Router.DefaultRoute;\n    // let hashHistory = Router.hashHistory;\n\n    if (response.status !== 200) {\n        //throw Error(body.message)\n      if (response.status == 404) {\n          alert(\"LoginName does not exist\");\n      }  else if (response.status == 400){\n         alert(\"LoginName and password do not match\");\n      }\n    } else {\n      console.log(\"Successfully logged in\");\n      this.props.userHasAuthenticated(true);\n      this.props.history.push(\"/\");\n      // User.setState({\n      //   loginName: userLoginName\n      // });\n      // hashHistory.push('/user')\n    }\n\n    //return body;\n  };\n\n  render() {\n    return (\n      <div className=\"Login\">\n        <form onSubmit={this.handleSubmit}>\n          <FormGroup controlId=\"loginName\" bsSize=\"large\">\n            <label>LoginName</label>\n            <FormControl\n              autoFocus\n              type=\"loginName\"\n              value={this.state.loginName}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            <label>Password</label>\n            <FormControl\n              value={this.state.password}\n              onChange={this.handleChange}\n              type=\"password\"\n            />\n          </FormGroup>\n          <Button\n            block\n            bsSize=\"large\"\n            disabled={!this.validateForm()}\n            type=\"submit\"\n          >\n            Login\n          </Button>\n          {/*<Button*/}\n          {/*    block*/}\n          {/*    bsSize=\"large\"*/}\n          {/*    onClick={this.handleAlternate.bind(this)}*/}\n          {/*>*/}\n          {/*  Register*/}\n          {/*</Button>*/}\n        </form>\n      </div>\n    );\n  }\n}\n\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}