{"ast":null,"code":"var _jsxFileName = \"/Users/Azio/Documents/GitHub/date-a-base/client/src/Feed.js\";\nimport React, { Component } from 'react';\nimport Post from \"./Post\";\nimport './Feed.css';\nconst NUMBER_OF_POSTS_TO_LOAD = 10;\n\nclass Feed extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      postIds: []\n    };\n\n    this.retrieveFeed = async () => {\n      let url = '/retrieve_posts?numberOfPosts=' + NUMBER_OF_POSTS_TO_LOAD;\n      const response = await fetch(url);\n      console.log(response); // const response = await fetch('/retrieve_posts?', {\n      //     method: 'POST',\n      //     headers: new Headers({\n      //         'Accept': 'application/json, text/plain, */*',\n      //         'Content-Type': 'application/json'\n      //     }),\n      //     body: JSON.stringify({\n      //         numberOfPosts: NUMBER_OF_POSTS_TO_LOAD\n      //     })\n      // })\n\n      const json = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(json.message);\n      }\n\n      return json;\n    };\n\n    this.renderPosts = () => {\n      let posts = []; // Add the posts\n\n      let postIds = this.state.postIds;\n\n      for (let i = 0; i < postIds.length; ++i) {\n        posts.push(React.createElement(Post, {\n          postId: postIds[i].postid,\n          myUserId: this.props.myUserId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }));\n      }\n\n      return posts;\n    };\n  }\n\n  componentDidMount() {\n    // Load the feed contents\n    this.retrieveFeed().then(res => this.setState({\n      postIds: res.postIds\n    }));\n  }\n\n  render() {\n    return (// TODO: Make a box that contains the posts\n      React.createElement(\"div\", {\n        className: \"Feed-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Feed Start\"), this.renderPosts())\n    );\n  }\n\n}\n\nexport default Feed;","map":{"version":3,"sources":["/Users/Azio/Documents/GitHub/date-a-base/client/src/Feed.js"],"names":["React","Component","Post","NUMBER_OF_POSTS_TO_LOAD","Feed","state","postIds","retrieveFeed","url","response","fetch","console","log","json","status","Error","message","renderPosts","posts","i","length","push","postid","props","myUserId","componentDidMount","then","res","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,YAAP;AAEA,MAAMC,uBAAuB,GAAG,EAAhC;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBI,KADyB,GACjB;AACJC,MAAAA,OAAO,EAAE;AADL,KADiB;;AAAA,SAazBC,YAbyB,GAaV,YAAY;AACvB,UAAIC,GAAG,GAAG,mCAAmCL,uBAA7C;AACA,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAHuB,CAKvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAMI,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAT,EAAnB;;AAEA,UAAIJ,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B;AACzB,cAAMC,KAAK,CAACF,IAAI,CAACG,OAAN,CAAX;AACH;;AACD,aAAOH,IAAP;AACH,KAnCwB;;AAAA,SAsCzBI,WAtCyB,GAsCX,MACd;AACI,UAAIC,KAAK,GAAG,EAAZ,CADJ,CAGI;;AACA,UAAIZ,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAzB;;AACA,WAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,OAAO,CAACc,MAA5B,EAAoC,EAAED,CAAtC,EACA;AACID,QAAAA,KAAK,CAACG,IAAN,CAAW,oBAAC,IAAD;AAAM,UAAA,MAAM,EAAIf,OAAO,CAACa,CAAD,CAAP,CAAWG,MAA3B;AAAmC,UAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;AACH;;AAED,aAAON,KAAP;AACH,KAlDwB;AAAA;;AAKzBO,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKlB,YAAL,GACKmB,IADL,CACUC,GAAG,IAAI,KAAKC,QAAL,CAAe;AACxBtB,MAAAA,OAAO,EAAEqB,GAAG,CAACrB;AADW,KAAf,CADjB;AAIH;;AAyCDuB,EAAAA,MAAM,GAAG;AACL,WACI;AACA;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEK,KAAKZ,WAAL,EAFL;AAFJ;AAOH;;AA5DwB;;AAgE7B,eAAeb,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport Post from \"./Post\";\nimport './Feed.css'\n\nconst NUMBER_OF_POSTS_TO_LOAD = 10;\n\nclass Feed extends Component {\n    state = {\n        postIds: []\n    };\n\n    componentDidMount() {\n        // Load the feed contents\n        this.retrieveFeed()\n            .then(res => this.setState( {\n                postIds: res.postIds\n            }));\n    }\n\n    retrieveFeed = async () => {\n        let url = '/retrieve_posts?numberOfPosts=' + NUMBER_OF_POSTS_TO_LOAD;\n        const response = await fetch(url)\n        console.log(response);\n\n        // const response = await fetch('/retrieve_posts?', {\n        //     method: 'POST',\n        //     headers: new Headers({\n        //         'Accept': 'application/json, text/plain, */*',\n        //         'Content-Type': 'application/json'\n        //     }),\n        //     body: JSON.stringify({\n        //         numberOfPosts: NUMBER_OF_POSTS_TO_LOAD\n        //     })\n        // })\n\n        const json = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(json.message)\n        }\n        return json;\n    }\n\n    // Translates this.state.postIds into legible React Post objects\n    renderPosts = () =>\n    {\n        let posts = [];\n\n        // Add the posts\n        let postIds = this.state.postIds;\n        for (let i = 0; i < postIds.length; ++i)\n        {\n            posts.push(<Post postId = {postIds[i].postid} myUserId={this.props.myUserId}/>);\n        }\n\n        return posts;\n    }\n\n    render() {\n        return (\n            // TODO: Make a box that contains the posts\n            <div className='Feed-container'>\n                <p>Feed Start</p>\n                {this.renderPosts()}\n            </div>\n        );\n    }\n}\n\n\nexport default Feed;"]},"metadata":{},"sourceType":"module"}