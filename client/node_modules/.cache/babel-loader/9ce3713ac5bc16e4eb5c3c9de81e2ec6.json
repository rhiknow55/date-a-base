{"ast":null,"code":"var _jsxFileName = \"/Users/Rhino/date-a-base/client/src/User.js\";\nimport React, { Component } from 'react';\nimport Feed from './Feed.js';\nimport Profile from './Profile.js';\nimport { CommentSection } from \"./Comment\";\n\nclass User extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loginName: null,\n      username: null,\n      horoscope: null,\n      log: 0,\n      baseId: 0,\n      created: null\n    };\n\n    this.retrieveUserData = async () => {\n      var userId = 2;\n      const response = await fetch('/user_data?userId=' + userId);\n      const json = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(json.message);\n      }\n\n      return json;\n    };\n  }\n\n  componentDidMount() {\n    // Load the user data\n    this.retrieveUserData().then(res => this.setState({\n      username: res.username,\n      horoscope: res.horoscope,\n      log: res.log,\n      baseId: res.baseId\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"User\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Profile, {\n      username: this.state.username,\n      horoscope: this.state.horoscope,\n      log: this.state.log,\n      baseId: this.state.baseId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(Feed, {\n      myUserId: this.props.myUserId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n} // class Profile extends Component\n// {\n//     render() {\n//         return (\n//             <div>\n//                 <p>This is Profile</p>\n//                 Username = {this.props.username}\n//                 Horoscope = {this.props.horoscope}\n//                 LOG = {this.props.log}\n//                 BaseId = {this.props.baseId}\n//             </div>\n//         );\n//     }\n// }\n\n\nexport default User;","map":{"version":3,"sources":["/Users/Rhino/date-a-base/client/src/User.js"],"names":["React","Component","Feed","Profile","CommentSection","User","state","loginName","username","horoscope","log","baseId","created","retrieveUserData","userId","response","fetch","json","status","Error","message","componentDidMount","then","res","setState","render","props","myUserId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAAQC,cAAR,QAA6B,WAA7B;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBK,KADyB,GACjB;AACJC,MAAAA,SAAS,EAAE,IADP;AAEJC,MAAAA,QAAQ,EAAE,IAFN;AAGJC,MAAAA,SAAS,EAAE,IAHP;AAIJC,MAAAA,GAAG,EAAE,CAJD;AAKJC,MAAAA,MAAM,EAAE,CALJ;AAMJC,MAAAA,OAAO,EAAE;AANL,KADiB;;AAAA,SAsBzBC,gBAtByB,GAsBN,YAAY;AAC3B,UAAIC,MAAM,GAAG,CAAb;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuBF,MAAxB,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;;AAEA,UAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AACzB,cAAMC,KAAK,CAACF,IAAI,CAACG,OAAN,CAAX;AACH;;AACD,aAAOH,IAAP;AACH,KA/BwB;AAAA;;AAWzBI,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKR,gBAAL,GACKS,IADL,CACUC,GAAG,IAAI,KAAKC,QAAL,CAAe;AACxBhB,MAAAA,QAAQ,EAAEe,GAAG,CAACf,QADU;AAExBC,MAAAA,SAAS,EAAEc,GAAG,CAACd,SAFS;AAGxBC,MAAAA,GAAG,EAAEa,GAAG,CAACb,GAHe;AAIxBC,MAAAA,MAAM,EAAEY,GAAG,CAACZ;AAJY,KAAf,CADjB;AAOH;;AAaDc,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AACI,MAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWE,QADzB;AAEI,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,SAF1B;AAGI,MAAA,GAAG,EAAE,KAAKH,KAAL,CAAWI,GAHpB;AAII,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWK,MAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,EAQI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKe,KAAL,CAAWC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAYH;;AA9CwB,C,CAiD7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAetB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport Feed from './Feed.js';\nimport Profile from './Profile.js';\nimport {CommentSection} from \"./Comment\";\n\nclass User extends Component {\n    state = {\n        loginName: null,\n        username: null,\n        horoscope: null,\n        log: 0,\n        baseId: 0,\n        created: null\n    };\n\n\n    componentDidMount() {\n        // Load the user data\n        this.retrieveUserData()\n            .then(res => this.setState( {\n                username: res.username,\n                horoscope: res.horoscope,\n                log: res.log,\n                baseId: res.baseId\n            }));\n    }\n\n    retrieveUserData = async () => {\n        var userId = 2\n        const response = await fetch('/user_data?userId=' + userId);\n        const json = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(json.message)\n        }\n        return json;\n    }\n\n    render() {\n        return (\n            <div className=\"User\">\n                <Profile\n                    username={this.state.username}\n                    horoscope={this.state.horoscope}\n                    log={this.state.log}\n                    baseId={this.state.baseId}\n                    />\n                <span>&nbsp;</span>\n                <Feed myUserId={this.props.myUserId} />\n            </div>\n        );\n    }\n}\n\n// class Profile extends Component\n// {\n//     render() {\n//         return (\n//             <div>\n//                 <p>This is Profile</p>\n//                 Username = {this.props.username}\n//                 Horoscope = {this.props.horoscope}\n//                 LOG = {this.props.log}\n//                 BaseId = {this.props.baseId}\n//             </div>\n//         );\n//     }\n// }\n\n\nexport default User;"]},"metadata":{},"sourceType":"module"}