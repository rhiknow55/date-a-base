{"ast":null,"code":"var _jsxFileName = \"/Users/Rhino/date-a-base/client/src/User.js\";\nimport React, { Component } from 'react';\nimport Feed from './Feed.js';\n\nclass User extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: null,\n      horoscope: null,\n      log: 0\n    };\n\n    this.retrieveUserData = async () => {\n      const response = await fetch('/user_data?loginName=');\n      const json = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(json.message);\n      }\n\n      return json;\n    };\n  }\n\n  componentDidMount() {\n    // Load the user data\n    this.retrieveUserData().then(res => this.setState({\n      username: res.username,\n      horoscope: res.horoscope,\n      log: res.log\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"User\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Profile, {\n      username: this.state.username,\n      horoscope: this.state.horoscope,\n      log: this.state.log,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Feed, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Profile extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"This is Profile\"), \"Username = \", this.props.username, \"Horoscope = \", this.props.horoscope, \"LOG = \", this.props.log);\n  }\n\n}\n\nexport default User;","map":{"version":3,"sources":["/Users/Rhino/date-a-base/client/src/User.js"],"names":["React","Component","Feed","User","state","username","horoscope","log","retrieveUserData","response","fetch","json","status","Error","message","componentDidMount","then","res","setState","render","Profile","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBG,KADyB,GACjB;AACJC,MAAAA,QAAQ,EAAE,IADN;AAEJC,MAAAA,SAAS,EAAE,IAFP;AAGJC,MAAAA,GAAG,EAAE;AAHD,KADiB;;AAAA,SAiBzBC,gBAjByB,GAiBN,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;;AAEA,UAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AACzB,cAAMC,KAAK,CAACF,IAAI,CAACG,OAAN,CAAX;AACH;;AACD,aAAOH,IAAP;AACH,KAzBwB;AAAA;;AAOzBI,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKP,gBAAL,GACKQ,IADL,CACUC,GAAG,IAAI,KAAKC,QAAL,CAAe;AACxBb,MAAAA,QAAQ,EAAEY,GAAG,CAACZ,QADU;AAExBC,MAAAA,SAAS,EAAEW,GAAG,CAACX,SAFS;AAGxBC,MAAAA,GAAG,EAAEU,GAAG,CAACV;AAHe,KAAf,CADjB;AAMH;;AAYDY,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AACI,MAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWC,QADzB;AAEI,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SAF1B;AAGI,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,GAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAUH;;AAtCwB;;AAyC7B,MAAMa,OAAN,SAAsBnB,SAAtB,CACA;AACIkB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,iBAEgB,KAAKE,KAAL,CAAWhB,QAF3B,kBAGiB,KAAKgB,KAAL,CAAWf,SAH5B,YAIW,KAAKe,KAAL,CAAWd,GAJtB,CADJ;AAQH;;AAVL;;AAcA,eAAeJ,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport Feed from './Feed.js';\n\nclass User extends Component {\n    state = {\n        username: null,\n        horoscope: null,\n        log: 0\n    };\n\n    componentDidMount() {\n        // Load the user data\n        this.retrieveUserData()\n            .then(res => this.setState( {\n                username: res.username,\n                horoscope: res.horoscope,\n                log: res.log\n            }));\n    }\n\n    retrieveUserData = async () => {\n        const response = await fetch('/user_data?loginName=');\n        const json = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(json.message)\n        }\n        return json;\n    }\n\n    render() {\n        return (\n            <div className=\"User\">\n                <Profile\n                    username={this.state.username}\n                    horoscope={this.state.horoscope}\n                    log={this.state.log}\n                    />\n                <Feed />\n            </div>\n        );\n    }\n}\n\nclass Profile extends Component\n{\n    render() {\n        return (\n            <div>\n                <p>This is Profile</p>\n                Username = {this.props.username}\n                Horoscope = {this.props.horoscope}\n                LOG = {this.props.log}\n            </div>\n        );\n    }\n}\n\n\nexport default User;"]},"metadata":{},"sourceType":"module"}