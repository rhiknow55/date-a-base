{"ast":null,"code":"var _jsxFileName = \"/Users/Rhino/date-a-base/client/src/Comment.js\";\nimport React, { Component } from 'react';\nimport './Post.css';\nexport class CommentSection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.retrieveFeed = async () => {\n      let url = '/retrieve_comments?postId=' + this.props.postId;\n      const response = await fetch(url);\n      const json = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(json.message);\n      }\n\n      return json;\n    };\n\n    this.renderComments = () => {\n      let comments = []; // Add the posts\n\n      let commentIds = this.state.commentIds;\n\n      for (let i = 0; i < commentIds.length; ++i) {\n        posts.push(React.createElement(CommentBox, {\n          postId: postIds[i].postid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }));\n      }\n\n      return comments;\n    };\n\n    this.state = {\n      hasComments: false,\n      postId: this.props.postId,\n      commentIds: []\n    };\n  }\n\n  componentDidMount() {\n    // Load the comments for this post\n    this.retrieveFeed().then(res => this.setState({\n      hasComments: true,\n      commentIds: res.commentIds\n    }));\n  }\n\n  render() {\n    console.log(\"render\" + this.state.postId);\n    return React.createElement(\"div\", {\n      className: \"CommentSection-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"CommentSection\", React.createElement(CommentBox, {\n      postId: 2,\n      commentId: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), this.renderComments());\n  }\n\n}\nexport class AddComment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postId: this.props.postId\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"AddComment-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n  }\n\n}\nexport class CommentBox extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Comment-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Comment\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/Rhino/date-a-base/client/src/Comment.js"],"names":["React","Component","CommentSection","constructor","props","retrieveFeed","url","postId","response","fetch","json","status","Error","message","renderComments","comments","commentIds","state","i","length","posts","push","postIds","postid","hasComments","componentDidMount","then","res","setState","render","console","log","AddComment","CommentBox"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;AAEA,OAAO,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAC1CE,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;;AADJ,SAmBAC,YAnBA,GAmBe,YAAY;AACvB,UAAIC,GAAG,GAAG,+BAA+B,KAAKF,KAAL,CAAWG,MAApD;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,CAA5B;AAEA,YAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;;AAEA,UAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AACzB,cAAMC,KAAK,CAACF,IAAI,CAACG,OAAN,CAAX;AACH;;AACD,aAAOH,IAAP;AACH,KA7BD;;AAAA,SA+BAI,cA/BA,GA+BiB,MACjB;AACI,UAAIC,QAAQ,GAAG,EAAf,CADJ,CAGI;;AACA,UAAIC,UAAU,GAAG,KAAKC,KAAL,CAAWD,UAA5B;;AACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuC,EAAED,CAAzC,EACA;AACIE,QAAAA,KAAK,CAACC,IAAN,CAAW,oBAAC,UAAD;AAAY,UAAA,MAAM,EAAIC,OAAO,CAACJ,CAAD,CAAP,CAAWK,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;AACH;;AAED,aAAOR,QAAP;AACH,KA3CD;;AAEI,SAAKE,KAAL,GAAa;AACTO,MAAAA,WAAW,EAAE,KADJ;AAETjB,MAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG,MAFV;AAGTS,MAAAA,UAAU,EAAE;AAHH,KAAb;AAKH;;AAEDS,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKpB,YAAL,GACKqB,IADL,CACUC,GAAG,IACT,KAAKC,QAAL,CAAc;AACVJ,MAAAA,WAAW,EAAE,IADH;AAEVR,MAAAA,UAAU,EAAEW,GAAG,CAACX;AAFN,KAAd,CAFJ;AAMH;;AA4BDa,EAAAA,MAAM,GACN;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAW,KAAKd,KAAL,CAAWV,MAAlC;AACA,WACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEI,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAE,CAApB;AAAuB,MAAA,SAAS,EAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGK,KAAKO,cAAL,EAHL,CADJ;AAOH;;AAzDyC;AA4D9C,OAAO,MAAMkB,UAAN,SAAyB/B,SAAzB,CAAmC;AACtCE,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKa,KAAL,GAAa;AACTV,MAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG;AADV,KAAb;AAGH;;AAEDsB,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAfqC;AAkB1C,OAAO,MAAMI,UAAN,SAAyBhC,SAAzB,CAAmC;AACtC4B,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ;AAMH;;AARqC","sourcesContent":["import React, {Component} from 'react';\nimport './Post.css';\n\nexport class CommentSection extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            hasComments: false,\n            postId: this.props.postId,\n            commentIds: []\n        }\n    }\n\n    componentDidMount() {\n        // Load the comments for this post\n        this.retrieveFeed()\n            .then(res =>\n            this.setState({\n                hasComments: true,\n                commentIds: res.commentIds\n            }));\n    }\n\n    retrieveFeed = async () => {\n        let url = '/retrieve_comments?postId=' + this.props.postId;\n        const response = await fetch(url)\n\n        const json = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(json.message)\n        }\n        return json;\n    }\n\n    renderComments = () =>\n    {\n        let comments = [];\n\n        // Add the posts\n        let commentIds = this.state.commentIds;\n        for (let i = 0; i < commentIds.length; ++i)\n        {\n            posts.push(<CommentBox postId = {postIds[i].postid}/>);\n        }\n\n        return comments;\n    }\n\n    render()\n    {\n        console.log(\"render\" + this.state.postId)\n        return(\n            <div className=\"CommentSection-container\">\n                CommentSection\n                <CommentBox postId={2} commentId={3} />\n                {this.renderComments()}\n            </div>\n        );\n    }\n}\n\nexport class AddComment extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            postId: this.props.postId,\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"AddComment-container\">\n\n            </div>\n        );\n    }\n}\n\nexport class CommentBox extends Component {\n    render() {\n        return (\n            <div className='Comment-container'>\n                <p>Comment</p>\n\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}