{"ast":null,"code":"var _jsxFileName = \"/Users/Rhino/date-a-base/client/src/Register.js\";\nimport React, { Component } from \"react\";\nimport { HelpBlock, FormGroup, FormControl, Button } from \"react-bootstrap\"; // import LoaderButton from \"../components/LoaderButton\";\n\nimport \"./Register.css\";\nimport User from \"./User\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n\n      try {\n        this.userRegister();\n      } catch (e) {\n        alert(e.message);\n      }\n\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.userRegister = async () => {\n      var userLoginName = this.state.loginName;\n      var userPassword = this.state.password;\n      const response = await fetch('/register', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          // userId: 0,\n          loginName: this.state.loginName,\n          password: this.state.password,\n          username: this.state.username,\n          horoscope: this.state.horoscope,\n          birthday: this.state.birthday\n        })\n      });\n\n      if (response.status !== 200) {\n        alert(\"registration failed\");\n      } else {\n        console.log(\"user registered sucessfully\");\n        const response_json = await response.json();\n        this.props.history.push(\"/login\");\n      } //return response_json;\n\n    };\n\n    this.state = {\n      // isLoading: false,\n      loginName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      username: \"\",\n      birthday: \"\",\n      horoscope: \"\",\n      // userId: 0,\n      // baseId: 0,\n      newUser: null\n    };\n  }\n\n  validateForm() {\n    return this.state.loginName.length > 0 && this.state.password.length > 0 && this.state.username.length > 0 && this.state.birthday.length > 0 && this.state.horoscope.length > 0 && this.state.password === this.state.confirmPassword;\n  }\n\n  validateConfirmationForm() {\n    return this.state.userId.length > 0;\n  }\n\n  renderQuestions() {\n    return React.createElement(\"div\", {\n      className: \"Questions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"lander\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Display sorting hat questions here!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"----\")));\n  }\n\n  renderForm() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"loginName\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Login Name\"), React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"loginName\",\n      value: this.state.loginName,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Password\"), React.createElement(FormControl, {\n      value: this.state.password,\n      onChange: this.handleChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"confirmPassword\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(FormControl, {\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"username\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Username\"), React.createElement(FormControl, {\n      value: this.state.username,\n      onChange: this.handleChange,\n      type: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"birthday\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Birthday(YYYY-MM-DD)\"), React.createElement(FormControl, {\n      value: this.state.birthday,\n      onChange: this.handleChange,\n      type: \"birthday\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"horoscope\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Horoscope\"), React.createElement(FormControl, {\n      value: this.state.horoscope,\n      onChange: this.handleChange,\n      type: \"horoscope\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      disabled: !this.validateForm(),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Register\"));\n  }\n\n  renderConfirmationForm() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleConfirmationSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"userId\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"UserId\"), React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"userId\",\n      value: this.state.userId,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      disabled: !this.validateConfirmationForm(),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Register\"));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, this.state.newUser === null ? this.renderForm() : this.renderQuestions());\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/Rhino/date-a-base/client/src/Register.js"],"names":["React","Component","HelpBlock","FormGroup","FormControl","Button","User","Register","constructor","props","handleChange","event","setState","target","id","value","handleSubmit","preventDefault","isLoading","userRegister","e","alert","message","userLoginName","state","loginName","userPassword","password","response","fetch","method","headers","body","JSON","stringify","username","horoscope","birthday","status","console","log","response_json","json","history","push","confirmPassword","newUser","validateForm","length","validateConfirmationForm","userId","renderQuestions","renderForm","renderConfirmationForm","handleConfirmationSubmit","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  HelpBlock,\n  FormGroup,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\n// import LoaderButton from \"../components/LoaderButton\";\nimport \"./Register.css\";\nimport User from \"./User\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // isLoading: false,\n      loginName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      username: \"\",\n      birthday: \"\",\n      horoscope: \"\",\n      // userId: 0,\n      // baseId: 0,\n      newUser: null\n    };\n  }\n\n  validateForm() {\n    return (\n      this.state.loginName.length > 0 &&\n      this.state.password.length > 0 &&\n      this.state.username.length > 0 &&\n      this.state.birthday.length > 0 &&\n      this.state.horoscope.length > 0 &&\n      this.state.password === this.state.confirmPassword\n    );\n  }\n\n  validateConfirmationForm() {\n    return this.state.userId.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    this.setState({ isLoading: true });\n\n    try{\n      this.userRegister();\n    } catch (e) {\n     alert(e.message);\n   }\n\n    this.setState({ isLoading: false });\n  }\n\n  // handleConfirmationSubmit = async event => {\n  // event.preventDefault();\n  //\n  // this.setState({ isLoading: true });\n  //\n  //   try {\n  //     await Auth.confirmSignUp(this.state.email, this.state.confirmationCode);\n  //     await Auth.signIn(this.state.email, this.state.password);\n  //\n  //     this.props.userHasAuthenticated(true);\n  //     this.props.history.push(\"/\");\n  //   } catch (e) {\n  //     alert(e.message);\n  //     this.setState({ isLoading: false });\n  //   }\n  // }\n\n  userRegister = async () => {\n    var userLoginName = this.state.loginName;\n    var userPassword = this.state.password;\n\n    const response = await fetch('/register', {\n      method: 'POST',\n      headers: {\n       'Accept': 'application/json',\n       'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        // userId: 0,\n        loginName: this.state.loginName,\n        password: this.state.password,\n        username: this.state.username,\n        horoscope: this.state.horoscope,\n        birthday: this.state.birthday\n      })\n    });\n\n    if (response.status !== 200) {\n\n      alert(\"registration failed\");\n    } else {\n      console.log(\"user registered sucessfully\");\n      const response_json = await response.json();\n\n      this.props.history.push(\"/login\");\n\n    }\n\n    //return response_json;\n  };\n\n  renderQuestions() {\n    return (\n      <div className=\"Questions\">\n        <div className=\"lander\">\n          <h1>Display sorting hat questions here!</h1>\n          <p>----</p>\n        </div>\n        {/*<User myUserId={1}/>*/}\n      </div>\n    );\n  }\n\n  renderForm() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormGroup controlId=\"loginName\" bsSize=\"large\">\n          <label>Login Name</label>\n          <FormControl\n            autoFocus\n            type=\"loginName\"\n            value={this.state.loginName}\n            onChange={this.handleChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <label>Password</label>\n          <FormControl\n            value={this.state.password}\n            onChange={this.handleChange}\n            type=\"password\"\n          />\n        </FormGroup>\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n          <label>Confirm Password</label>\n          <FormControl\n            value={this.state.confirmPassword}\n            onChange={this.handleChange}\n            type=\"password\"\n          />\n        </FormGroup>\n        <FormGroup controlId=\"username\" bsSize=\"large\">\n          <label>Username</label>\n          <FormControl\n            value={this.state.username}\n            onChange={this.handleChange}\n            type=\"username\"\n          />\n        </FormGroup>\n        <FormGroup controlId=\"birthday\" bsSize=\"large\">\n          <label>Birthday(YYYY-MM-DD)</label>\n          <FormControl\n            value={this.state.birthday}\n            onChange={this.handleChange}\n            type=\"birthday\"\n          />\n        </FormGroup>\n        <FormGroup controlId=\"horoscope\" bsSize=\"large\">\n          <label>Horoscope</label>\n          <FormControl\n            value={this.state.horoscope}\n            onChange={this.handleChange}\n            type=\"horoscope\"\n          />\n        </FormGroup>\n        <Button\n            block\n            bsSize=\"large\"\n            disabled={!this.validateForm()}\n            type=\"submit\"\n          >\n            Register\n          </Button>\n      </form>\n    );\n  }\n\n  renderConfirmationForm() {\n    return (\n      <form onSubmit={this.handleConfirmationSubmit}>\n        <FormGroup controlId=\"userId\" bsSize=\"large\">\n          <label>UserId</label>\n          <FormControl\n            autoFocus\n            type=\"userId\"\n            value={this.state.userId}\n            onChange={this.handleChange}\n          />\n          {/*<HelpBlock>Please answer all the following sorting hat questions.</HelpBlock>*/}\n        </FormGroup>\n        {/*<Button*/}\n        {/*  block*/}\n        {/*  bsSize=\"large\"*/}\n        {/*  disabled={!this.validateConfirmationForm()}*/}\n        {/*  type=\"submit\"*/}\n        {/*  isLoading={this.state.isLoading}*/}\n        {/*  text=\"Verify\"*/}\n        {/*  loadingText=\"Verifying…\"*/}\n        {/*/>*/}\n        <Button\n            block\n            bsSize=\"large\"\n            disabled={!this.validateConfirmationForm()}\n            type=\"submit\"\n          >\n            Register\n          </Button>\n      </form>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Register\">\n        {this.state.newUser === null\n          ? this.renderForm()\n          : this.renderQuestions()}\n      </div>\n    );\n  }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}