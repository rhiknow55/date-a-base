{"ast":null,"code":"var _jsxFileName = \"/Users/Rhino/date-a-base/client/src/Comment.js\";\nimport React, { Component } from 'react';\nimport './Post.css';\nexport class CommentSection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.retrieveFeed = async () => {\n      console.log(this.props.postId);\n      let url = '/retrieve_comments?postId=' + this.props.postId;\n      const response = await fetch(url);\n      const json = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(json.message);\n      }\n\n      return json;\n    };\n\n    this.state = {\n      postId: this.props.postId,\n      commentIds: []\n    };\n  }\n\n  componentDidMount() {\n    // Load the comments for this post\n    this.retrieveFeed().then(res => {\n      this.setState({\n        commentIds: res.commentIds\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"CommentSection-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n}\nexport class AddComment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postId: this.props.postId\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"AddComment-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"// Has the comments above // And the\");\n  }\n\n}\nexport class Comment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postId: this.props.postId\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Comment-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"// Has the comments above // And the\");\n  }\n\n}","map":{"version":3,"sources":["/Users/Rhino/date-a-base/client/src/Comment.js"],"names":["React","Component","CommentSection","constructor","props","retrieveFeed","console","log","postId","url","response","fetch","json","status","Error","message","state","commentIds","componentDidMount","then","res","setState","render","AddComment","Comment"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;AAEA,OAAO,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAC1CE,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;;AADJ,SAkBAC,YAlBA,GAkBe,YAAY;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,MAAvB;AACA,UAAIC,GAAG,GAAG,+BAA+B,KAAKL,KAAL,CAAWI,MAApD;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AAEA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;;AAEA,UAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AACzB,cAAMC,KAAK,CAACF,IAAI,CAACG,OAAN,CAAX;AACH;;AACD,aAAOH,IAAP;AACH,KA7BD;;AAEI,SAAKI,KAAL,GAAa;AACTR,MAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWI,MADV;AAETS,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKb,YAAL,GACKc,IADL,CACUC,GAAG,IAAI;AACb,WAAKC,QAAL,CAAc;AACVJ,QAAAA,UAAU,EAAEG,GAAG,CAACH;AADN,OAAd;AAGP,KALG;AAMH;;AAeDK,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAvCyC;AA0C9C,OAAO,MAAMC,UAAN,SAAyBtB,SAAzB,CAAmC;AACtCE,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKY,KAAL,GAAa;AACTR,MAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWI;AADV,KAAb;AAGH;;AAEDc,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADJ;AAMH;;AAhBqC;AAmB1C,OAAO,MAAME,OAAN,SAAsBvB,SAAtB,CAAgC;AACnCE,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKY,KAAL,GAAa;AACTR,MAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWI;AADV,KAAb;AAGH;;AAEDc,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADJ;AAMH;;AAhBkC","sourcesContent":["import React, {Component} from 'react';\nimport './Post.css';\n\nexport class CommentSection extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            postId: this.props.postId,\n            commentIds: []\n        }\n    }\n\n    componentDidMount() {\n        // Load the comments for this post\n        this.retrieveFeed()\n            .then(res => {\n            this.setState({\n                commentIds: res.commentIds\n            });\n    });\n    }\n\n    retrieveFeed = async () => {\n        console.log(this.props.postId);\n        let url = '/retrieve_comments?postId=' + this.props.postId;\n        const response = await fetch(url)\n\n        const json = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(json.message)\n        }\n        return json;\n    }\n\n    render() {\n        return (\n            <div className=\"CommentSection-container\">\n\n            </div>\n        );\n    }\n}\n\nexport class AddComment extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            postId: this.props.postId,\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"AddComment-container\">\n            // Has the comments above\n            // And the\n            </div>\n    );\n    }\n}\n\nexport class Comment extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            postId: this.props.postId,\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Comment-container\">\n            // Has the comments above\n            // And the\n            </div>\n    );\n    }\n}"]},"metadata":{},"sourceType":"module"}